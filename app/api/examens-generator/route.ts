import { type NextRequest, NextResponse } from "next/server"
import { generateText } from "ai"
import { openai } from "@ai-sdk/openai"

export async function POST(request: NextRequest) {
  try {
    console.log("üî¨ D√©but g√©n√©ration ordonnance examens EXPERT")
    
    const { patientData, diagnosisData, clinicalData } = await request.json()

    if (!patientData || !diagnosisData || !clinicalData) {
      return NextResponse.json(
        { success: false, error: "Donn√©es patient, diagnostic et cliniques requises pour prescription examens s√©curis√©e" },
        { status: 400 }
      )
    }

    // Construction du contexte m√©dical complet pour prescription examens
    const examensContext = `
PROFIL PATIENT D√âTAILL√â POUR EXAMENS:
- Identit√©: ${patientData.firstName || "N/A"} ${patientData.lastName || "N/A"}
- √Çge: ${patientData.age || "N/A"} ans (${patientData.age >= 65 ? "PATIENT √ÇG√âE - Adaptations g√©riatriques n√©cessaires" : "Adulte standard"})
- Sexe: ${patientData.gender || "N/A"} ${patientData.gender === "Femme" && patientData.age >= 15 && patientData.age <= 50 ? "(√Çge de procr√©ation - Test grossesse si pertinent)" : ""}
- Poids: ${patientData.weight || "N/A"} kg, Taille: ${patientData.height || "N/A"} cm
- IMC: ${patientData.weight && patientData.height ? (patientData.weight / Math.pow(patientData.height / 100, 2)).toFixed(2) : "N/A"} kg/m¬≤
- Surface corporelle: ${patientData.weight && patientData.height ? Math.sqrt((patientData.weight * patientData.height) / 3600).toFixed(2) : "N/A"} m¬≤

FONCTION R√âNALE ET H√âPATIQUE:
- Clairance cr√©atinine estim√©e: ${patientData.age > 65 ? "√Ä √©valuer - Pr√©cautions produits de contraste" : "Normale suppos√©e"}
- Fonction h√©patique: ${patientData.medicalHistory?.includes("Insuffisance h√©patique") ? "ALT√âR√âE - Pr√©cautions examens h√©patotoxiques" : "Normale suppos√©e"}
- Hydratation: ${clinicalData.dehydrationRisk ? "RISQUE D√âSHYDRATATION - Pr√©cautions n√©cessaires" : "Normale suppos√©e"}

ALLERGIES ET INTOL√âRANCES CRITIQUES:
- Allergies m√©dicamenteuses: ${(patientData.allergies || []).join(", ") || "Aucune allergie connue"}
- Allergie iode/produits de contraste: ${patientData.allergies?.includes("Iode") || patientData.allergies?.includes("Contraste") ? "ALLERGIE IODE - CONTRE-INDICATION ABSOLUE" : "Non document√©e - √Ä questionner"}
- Allergie gadolinium (IRM): ${patientData.allergies?.includes("Gadolinium") ? "ALLERGIE GADOLINIUM - CONTRE-INDICATION IRM" : "Non document√©e"}
- Intol√©rance claustrophobie: ${patientData.phobias?.includes("Claustrophobie") ? "CLAUSTROPHOBIE - Pr√©m√©dication anxiolytique" : "Non renseign√©e"}

TERRAIN M√âDICAL SP√âCIFIQUE:
- Cardiopathie: ${patientData.medicalHistory?.filter((h: string) => h.includes("cardiaque") || h.includes("infarctus")).join(", ") || "Aucune cardiopathie connue"}
- Diab√®te: ${patientData.medicalHistory?.includes("Diab√®te") ? "DIAB√àTE - Pr√©cautions metformine et produits de contraste" : "Pas de diab√®te connu"}
- Insuffisance r√©nale: ${patientData.medicalHistory?.includes("Insuffisance r√©nale") ? "IR CONNUE - Adaptation doses et contre-indications" : "Fonction r√©nale suppos√©e normale"}
- Pacemaker/implants: ${patientData.medicalHistory?.includes("Pacemaker") || patientData.medicalHistory?.includes("Implant") ? "DISPOSITIFS IMPLANT√âS - Pr√©cautions IRM" : "Pas d'implant connu"}
- Anticoagulation: ${patientData.currentMedicationsText?.includes("anticoagulant") || patientData.currentMedicationsText?.includes("warfarine") ? "ANTICOAGULATION - Pr√©cautions biopsies/ponctions" : "Pas d'anticoagulation connue"}

PR√âSENTATION CLINIQUE POUR ORIENTATION EXAMENS:
- Diagnostic principal: ${diagnosisData.diagnosis?.primaryDiagnosis?.condition || "Non √©tabli"}
- Code CIM-10: ${diagnosisData.diagnosis?.primaryDiagnosis?.icd10 || "√Ä coder"}
- S√©v√©rit√©: ${diagnosisData.diagnosis?.primaryDiagnosis?.severity || "Non grad√©e"}
- Sympt√¥mes cibles: ${(clinicalData.symptoms || []).join(", ") || "Aucun sympt√¥me sp√©cifi√©"}
- Douleur: ${clinicalData.painScale || 0}/10 - Localisation: ${clinicalData.painLocation || "Non sp√©cifi√©e"}
- Signes vitaux: T¬∞${clinicalData.vitalSigns?.temperature || "N/A"}¬∞C, FC ${clinicalData.vitalSigns?.heartRate || "N/A"}bpm, TA ${clinicalData.vitalSigns?.bloodPressureSystolic || "N/A"}/${clinicalData.vitalSigns?.bloodPressureDiastolic || "N/A"}mmHg
- Urgence diagnostique: ${diagnosisData.diagnosis?.urgencyLevel || "Standard"} - ${diagnosisData.diagnosis?.urgencyLevel === "√âlev√©e" ? "EXAMENS URGENTS REQUIS" : "Programmation standard possible"}

HYPOTH√àSES DIAGNOSTIQUES:
- Diagnostic principal (${diagnosisData.diagnosis?.primaryDiagnosis?.probability || 0}%): ${diagnosisData.diagnosis?.primaryDiagnosis?.condition || "Non d√©termin√©"}
- Diagnostics diff√©rentiels: ${diagnosisData.diagnosis?.differentialDiagnosis?.map((d: any) => `${d.condition} (${d.probability}%)`).join(", ") || "Aucun"}
- Red flags identifi√©s: ${diagnosisData.diagnosis?.redFlags?.map((f: any) => f.sign || f).join(", ") || "Aucun signe d'alarme"}
    `.trim()

    const expertExamensPrompt = `
Tu es un m√©decin expert en m√©decine diagnostique avec 25 ans d'exp√©rience. Tu ma√Ætrises parfaitement les indications, contre-indications et interpr√©tations de tous les examens compl√©mentaires. Tu dois √©tablir une ORDONNANCE D'EXAMENS COMPLETS selon les standards fran√ßais.

${examensContext}

EXIGENCES R√âGLEMENTAIRES ET TECHNIQUES:
1. Codes NABM/CCAM EXACTS pour facturation
2. Indications m√©dicales PR√âCISES et justifi√©es
3. Contra-indications V√âRIFI√âES selon le patient
4. Pr√©paration patient D√âTAILL√âE
5. D√©lais et urgences APPROPRI√âS
6. Interpr√©tation clinique ORIENT√âE

G√©n√®re une ordonnance d'examens EXPERTE au format JSON avec cette structure EXHAUSTIVE:

{
  "prescriptionHeader": {
    "prescriptionId": "EXA-${Date.now()}",
    "issueDate": "${new Date().toLocaleDateString("fr-FR")}",
    "issueTime": "${new Date().toLocaleTimeString("fr-FR")}",
    "prescriber": {
      "name": "Dr. TIBOK IA DOCTOR",
      "title": "Praticien Expert en M√©decine Interne",
      "rppsNumber": "IA-RPPS-2024-EXPERT",
      "adeli": "IA-ADELI-2024-EXPERT",
      "establishment": "Centre M√©dical TIBOK - Consultation IA Expert"
    },
    "patient": {
      "lastName": "${patientData.lastName || "N/A"}",
      "firstName": "${patientData.firstName || "N/A"}",
      "birthDate": "${patientData.dateOfBirth || "N/A"}",
      "age": "${patientData.age || "N/A"} ans",
      "weight": "${patientData.weight || "N/A"} kg",
      "height": "${patientData.height || "N/A"} cm",
      "socialSecurityNumber": "Consultation IA - Non communiqu√©"
    },
    "clinicalContext": "Contexte clinique et hypoth√®ses diagnostiques justifiant les examens",
    "urgencyLevel": "Niveau d'urgence global des examens (Imm√©diate/Semi-urgente/Programm√©e)"
  },

  "laboratoryTests": [
    {
      "categoryId": "HEMATOLOGIE",
      "categoryName": "Examens H√©matologiques",
      "tests": [
        {
          "testId": "NFS",
          "testName": "Num√©ration Formule Sanguine",
          "nabmCode": "B0101",
          "cost": "16.76‚Ç¨",
          "reimbursement": "65%",
          
          "indication": {
            "primaryIndication": "Justification m√©dicale D√âTAILL√âE (minimum 150 mots) selon diagnostic et sympt√¥mes",
            "clinicalObjective": "Objectif diagnostique PR√âCIS recherch√©",
            "diagnosticYield": "Rentabilit√© diagnostique attendue",
            "evidenceLevel": "Niveau de preuve de l'indication (Grade A/B/C)",
            "guidelineReference": "R√©f√©rentiel recommandation utilis√©"
          },

          "technicalSpecs": {
            "sampleType": "Sang veineux sur tube EDTA",
            "sampleVolume": "2-4 mL",
            "fastingRequired": "Non",
            "preparationTime": "Aucune pr√©paration sp√©cifique",
            "processingTime": "2-4 heures",
            "resultDelay": "M√™me jour si urgence, 24h en routine"
          },

          "contraindications": {
            "absolute": ["Aucune contre-indication absolue"],
            "relative": ["Troubles coagulation s√©v√®res", "Prise anticoagulants majeurs"],
            "patientSpecific": "V√©rification sp√©cifique selon profil patient",
            "precautions": "Pr√©cautions particuli√®res pour ce patient"
          },

          "interpretation": {
            "normalValues": {
              "hemoglobin": "Homme: 13-17 g/dL, Femme: 12-15 g/dL",
              "hematocrit": "Homme: 40-50%, Femme: 36-45%",
              "leucocytes": "4000-10000/mm¬≥",
              "platelets": "150000-400000/mm¬≥"
            },
            "abnormalFindings": {
              "anemia": "Hb < valeurs normales - Orientation √©tiologique n√©cessaire",
              "leucocytosis": "Leucocytes > 10000 - Syndrome infectieux/inflammatoire",
              "thrombocytopenia": "Plaquettes < 150000 - Risque h√©morragique"
            },
            "clinicalCorrelation": "Corr√©lation clinique attendue selon diagnostic suspect√©",
            "followUpRequired": "Contr√¥les n√©cessaires selon r√©sultats"
          },

          "urgency": {
            "level": "Semi-urgente",
            "timing": "Dans les 24-48 heures",
            "justification": "N√©cessaire pour orientation diagnostique et d√©cision th√©rapeutique",
            "criticalValues": "Valeurs critiques n√©cessitant alerte imm√©diate"
          }
        }
      ]
    }
  ],

  "imagingStudies": [
    {
      "categoryId": "RADIOLOGIE_STANDARD",
      "categoryName": "Radiologie Conventionnelle",
      "examinations": [
        {
          "examId": "THORAX_FACE",
          "examName": "Radiographie Thorax Face",
          "ccamCode": "ZBQK002",
          "cost": "25.12‚Ç¨",
          "reimbursement": "70%",

          "indication": {
            "primaryIndication": "Justification radiologique D√âTAILL√âE selon sympt√¥mes respiratoires/cardiaques",
            "clinicalQuestion": "Question clinique PR√âCISE √† r√©soudre par l'imagerie",
            "alternativeImaging": "Alternatives d'imagerie selon disponibilit√©",
            "diagnosticImpact": "Impact diagnostique attendu sur la prise en charge"
          },

          "technicalProtocol": {
            "technique": "Radiographie num√©rique face debout en inspiration",
            "positioning": "Patient debout, face au d√©tecteur, bras √©cart√©s",
            "exposure": "Param√®tres techniques standards",
            "views": "Incidence face obligatoire, profil si n√©cessaire",
            "specialInstructions": "Instructions techniques sp√©ciales si n√©cessaires"
          },

          "contraindications": {
            "absolute": ["Grossesse (premier trimestre) sans indication vitale"],
            "relative": ["Grossesse connue - B√©n√©fice/risque √† √©valuer"],
            "patientSpecific": "${patientData.gender === "Femme" && patientData.age >= 15 && patientData.age <= 50 ? "Femme en √¢ge de procr√©er - V√©rifier absence grossesse" : "Pas de contre-indication li√©e au sexe/√¢ge"}",
            "radiationDose": "Dose faible d'irradiation - Justification √©tablie"
          },

          "patientPreparation": {
            "preparationRequired": "D√©shabillage jusqu'√† la ceinture",
            "clothingInstructions": "Retirer bijoux, montres, objets m√©talliques",
            "medicationAdjustment": "Aucun ajustement m√©dicamenteux n√©cessaire",
            "specialInstructions": "Instructions sp√©cifiques selon patient"
          },

          "expectedFindings": {
            "normalFindings": "Parenchyme pulmonaire normal, c≈ìur de taille normale",
            "pathologicalSigns": {
              "pulmonary": "Condensations, pneumothorax, √©panchements",
              "cardiac": "Cardiom√©galie, congestion pulmonaire",
              "mediastinal": "√âlargissement m√©diastinal, masses"
            },
            "limitationsOfTechnique": "Structures post√©rieures mal visualis√©es, superpositions",
            "additionalImagingCriteria": "Crit√®res n√©cessitant imagerie compl√©mentaire"
          },

          "urgency": {
            "level": "Programm√©e",
            "timing": "Dans les 7-15 jours",
            "justification": "Bilan diagnostique syst√©matique",
            "emergencyCriteria": "Crit√®res n√©cessitant r√©alisation urgente"
          }
        }
      ]
    }
  ],

  "specializedTests": [
    {
      "categoryId": "CARDIOLOGIE",
      "categoryName": "Explorations Cardiologiques",
      "examinations": [
        {
          "examId": "ECG_12_DERIVATIONS",
          "examName": "√âlectrocardiogramme 12 d√©rivations",
          "nabmCode": "DEQP003",
          "cost": "14.80‚Ç¨",
          "reimbursement": "70%",

          "indication": {
            "primaryIndication": "Exploration cardiologique selon sympt√¥mes (douleur thoracique, palpitations, dyspn√©e)",
            "clinicalObjective": "D√©pistage troubles rythme, isch√©mie, troubles conduction",
            "riskFactors": "Facteurs de risque cardiovasculaire du patient",
            "followUpContext": "Surveillance selon pathologie cardiaque connue"
          },

          "technicalSpecs": {
            "duration": "5-10 minutes",
            "positioning": "D√©cubitus dorsal, repos 5 minutes",
            "electrodePositioning": "Placement √©lectrodes selon normes internationales",
            "calibration": "25 mm/s, 10 mm/mV",
            "qualityControl": "V√©rification absence art√©facts"
          },

          "contraindications": {
            "absolute": ["Aucune contre-indication absolue"],
            "relative": ["L√©sions cutan√©es √©tendues au niveau √©lectrodes"],
            "patientSpecific": "Adaptation selon √©tat cutan√© et mobilit√©",
            "precautions": "D√©contamination √©lectrodes entre patients"
          },

          "interpretation": {
            "normalValues": {
              "rhythm": "Rythme sinusal 60-100 bpm",
              "intervals": "PR: 120-200ms, QRS: <120ms, QT corrig√©: <440ms",
              "axis": "Axe √©lectrique normal -30¬∞ √† +90¬∞"
            },
            "pathologicalFindings": {
              "arrhythmias": "Troubles rythme et conduction",
              "ischemia": "Signes isch√©mie aigu√´ ou s√©quellaire",
              "hypertrophy": "Hypertrophies auriculaires ou ventriculaires"
            },
            "emergencyFindings": "Crit√®res ECG n√©cessitant prise en charge urgente",
            "followUpCriteria": "Anomalies n√©cessitant surveillance cardiologique"
          },

          "urgency": {
            "level": "Semi-urgente",
            "timing": "Dans les 24-48 heures",
            "justification": "√âlimination pathologie cardiaque selon sympt√¥mes",
            "emergencyIndications": "Douleur thoracique, malaise, troubles rythme"
          }
        }
      ]
    }
  ],

  "functionalTests": [
    {
      "categoryId": "EXPLORATIONS_FONCTIONNELLES",
      "categoryName": "√âpreuves Fonctionnelles",
      "examinations": [
        {
          "examId": "EFR_COMPLETE",
          "examName": "√âpreuves Fonctionnelles Respiratoires Compl√®tes",
          "nabmCode": "GLQP004",
          "cost": "54.40‚Ç¨",
          "reimbursement": "70%",

          "indication": {
            "primaryIndication": "√âvaluation fonction respiratoire selon sympt√¥mes (dyspn√©e, toux chronique)",
            "clinicalQuestion": "Syndrome obstructif, restrictif, mixte ou normal",
            "diseaseMonitoring": "Surveillance √©volution pathologie respiratoire",
            "therapeuticEvaluation": "√âvaluation efficacit√© traitement bronchodilatateur"
          },

          "technicalProtocol": {
            "techniques": ["Spirom√©trie", "Pl√©thysmographie", "Test r√©versibilit√©"],
            "duration": "45-60 minutes",
            "cooperation": "N√©cessite coop√©ration active patient",
            "contraindications": "Pneumothorax r√©cent, an√©vrisme c√©r√©bral",
            "preparation": "Arr√™t bronchodilatateurs selon protocole"
          },

          "patientPreparation": {
            "medicationAdjustment": {
              "bronchodilatatorsShortActing": "Arr√™t 6 heures avant",
              "bronchodilatatorsLongActing": "Arr√™t 12-24 heures selon mol√©cule",
              "corticosteroids": "Maintien traitement cortico√Øde",
              "otherMedications": "Pas d'arr√™t autres traitements"
            },
            "lifestyleInstructions": {
              "smoking": "√âviter tabac 24h avant examen",
              "caffeine": "√âviter caf√©/th√© 4h avant",
              "meals": "Repas l√©ger 2h avant, √©viter repas copieux",
              "clothing": "V√™tements non serr√©s"
            }
          },

          "interpretation": {
            "normalValues": {
              "cvf": "CVF > 80% th√©orique",
              "vems": "VEMS > 80% th√©orique",
              "ratio": "VEMS/CVF > 70%",
              "capacities": "Capacit√©s pulmonaires dans normes"
            },
            "pathologicalPatterns": {
              "obstruction": "VEMS/CVF < 70% - Syndrome obstructif",
              "restriction": "CVF < 80% avec VEMS/CVF normal",
              "mixed": "Association syndrome obstructif et restrictif"
            },
            "severity": "Classification s√©v√©rit√© selon GOLD/ATS",
            "reversibility": "R√©versibilit√© > 12% et 200mL apr√®s bronchodilatateur"
          },

          "urgency": {
            "level": "Programm√©e",
            "timing": "Dans les 2-4 semaines",
            "justification": "Bilan fonctionnel respiratoire complet",
            "priorityCriteria": "Dyspn√©e s√©v√®re, suspicion pathologie grave"
          }
        }
      ]
    }
  ],

  "consultationsSpecialisees": [
    {
      "specialtyId": "CARDIOLOGIE",
      "specialtyName": "Consultation Cardiologie",
      "ccamCode": "CS02",
      "cost": "46.00‚Ç¨",
      "reimbursement": "70%",

      "indication": {
        "primaryIndication": "Avis cardiologique sp√©cialis√© selon sympt√¥mes cardiovasculaires",
        "specificQuestions": [
          "√âvaluation risque cardiovasculaire global",
          "Optimisation traitement selon recommandations",
          "N√©cessit√© examens compl√©mentaires sp√©cialis√©s"
        ],
        "urgencyLevel": "Consultation programm√©e ou semi-urgente selon contexte",
        "expectedOutcome": "Stratification risque et plan th√©rapeutique adapt√©"
      },

      "preparation": {
        "documentsToProvide": [
          "Ordonnances et r√©sultats examens r√©cents",
          "Liste compl√®te traitements actuels",
          "Ant√©c√©dents cardiovasculaires familiaux"
        ],
        "medicationContinuation": "Poursuivre tous traitements sauf indication contraire",
        "specificInstructions": "Apporter tensiom√®tre si auto-mesure"
      },

      "urgency": {
        "level": "Programm√©e",
        "timing": "Dans les 4-8 semaines",
        "justification": "Optimisation prise en charge cardiovasculaire",
        "emergencyReferral": "Urgence si douleur thoracique, ≈ìd√®me aigu"
      }
    }
  ],

  "followUpPlan": {
    "resultsTiming": {
      "laboratoryResults": "24-48 heures pour examens urgents, 3-5 jours routine",
      "imagingResults": "M√™me jour si urgence, 24-72h routine",
      "specializedTestResults": "1-2 semaines selon complexit√©",
      "consultationReports": "Disponibles apr√®s consultation sp√©cialis√©e"
    },

    "interpretationPlan": {
      "resultReview": "R√©vision syst√©matique de tous r√©sultats",
      "clinicalCorrelation": "Corr√©lation clinico-biologique obligatoire",
      "therapeuticAdjustment": "Adaptation th√©rapeutique selon r√©sultats",
      "additionalTestsCriteria": "Crit√®res n√©cessitant examens compl√©mentaires"
    },

    "nextSteps": {
      "followUpConsultation": "Consultation r√©sultats dans 7-15 jours",
      "urgentCallback": "Contact imm√©diat si r√©sultats critiques",
      "emergencyInstructions": "Conduite √† tenir selon r√©sultats anormaux",
      "longTermMonitoring": "Plan surveillance selon pathologie diagnostiqu√©e"
    }
  },

  "safetyAndQuality": {
    "qualityAssurance": {
      "indicationValidation": "Validation pertinence toutes prescriptions",
      "dosimetryOptimization": "Optimisation doses irradiation si applicable",
      "contrastSafety": "S√©curit√© produits contraste v√©rifi√©e",
      "riskBenefitAnalysis": "Analyse b√©n√©fice-risque document√©e"
    },

    "patientSafety": {
      "allergyCheck": "V√©rification allergies avant examens",
      "pregnancyScreen": "${patientData.gender === "Femme" && patientData.age >= 15 && patientData.age <= 50 ? "D√©pistage grossesse obligatoire" : "Non applicable"}",
      "renalFunction": "√âvaluation fonction r√©nale si produits contraste",
      "medicationInteractions": "V√©rification interactions m√©dicamenteuses"
    },

    "emergencyProcedures": {
      "contrastReactions": "Protocole r√©action produits contraste disponible",
      "emergencyContacts": "Contacts urgence laboratoire/imagerie",
      "criticalValuesProcedure": "Proc√©dure transmission valeurs critiques",
      "patientInstructions": "Instructions patient situations urgentes"
    }
  },

  "metadata": {
    "prescriptionMetrics": {
      "totalExaminations": "Nombre total examens prescrits",
      "complexityScore": "Score complexit√© prescription (1-10)",
      "costEstimate": "Co√ªt total estim√© examens",
      "timeToResults": "D√©lai global obtention r√©sultats",
      "radiationDoseEstimate": "Dose irradiation cumul√©e si applicable",
      "diagnosticYield": "Rentabilit√© diagnostique attendue"
    },

    "technicalData": {
      "generationDate": "${new Date().toISOString()}",
      "aiModel": "gpt-4o-diagnostic-imaging-expert",
      "validationLevel": "Expert diagnostic validation",
      "guidelinesUsed": ["HAS", "SFR", "ESC", "ATS/ERS"],
      "lastUpdated": "Derni√®re mise √† jour r√©f√©rentiels"
    },

    "legalCompliance": {
      "indicationJustification": "Justification m√©dicale toutes prescriptions",
      "dosimetryCompliance": "Respect r√©glementation radioprotection",
      "patientConsent": "Information patient selon Code Sant√© Publique",
      "dataProtection": "Respect RGPD transmission r√©sultats"
    },

    "qualityIndicators": {
      "appropriatenessScore": "Score pertinence prescriptions",
      "evidenceLevel": "Niveau preuve recommandations",
      "costEffectiveness": "Rapport co√ªt-efficacit√©",
      "patientSatisfaction": "Satisfaction patient attendue"
    }
  }
}

G√©n√®re maintenant l'ordonnance d'examens EXPERTE et COMPL√àTE au format JSON strict, en appliquant tous les principes de m√©decine diagnostique et de s√©curit√© patient.
`

    console.log("üß† G√©n√©ration ordonnance examens experte avec OpenAI...")

    const result = await generateText({
      model: openai("gpt-4o"),
      prompt: expertExamensPrompt,
      maxTokens: 16000,
      temperature: 0.05, // Tr√®s faible pour maximiser la pr√©cision
    })

    console.log("‚úÖ Ordonnance examens experte g√©n√©r√©e")

    // Parsing JSON avec gestion d'erreur experte
    let examensData
    try {
      let cleanText = result.text.trim()
      cleanText = cleanText.replace(/```json\s*/g, '').replace(/```\s*/g, '').trim()
      
      const startIndex = cleanText.indexOf('{')
      const endIndex = cleanText.lastIndexOf('}')
      
      if (startIndex >= 0 && endIndex > startIndex) {
        cleanText = cleanText.substring(startIndex, endIndex + 1)
      }
      
      examensData = JSON.parse(cleanText)
      console.log("‚úÖ JSON examens pars√© avec succ√®s")
      
    } catch (parseError) {
      console.warn("‚ö†Ô∏è Erreur parsing JSON examens, g√©n√©ration fallback expert")
      examensData = generateExpertExamensFallback(patientData, diagnosisData, clinicalData)
    }

    // Validation s√©curitaire suppl√©mentaire
    examensData = await validateExamensSafety(examensData, patientData)

    // Calcul automatique des m√©triques
    examensData.metadata = {
      ...examensData.metadata,
      calculatedMetrics: {
        totalExaminations: calculateTotalExaminations(examensData),
        estimatedCost: calculateEstimatedCost(examensData),
        totalRadiation: calculateRadiationDose(examensData),
        urgentExamsCount: countUrgentExams(examensData),
        averageResultDelay: calculateAverageDelay(examensData)
      }
    }

    console.log("‚úÖ Ordonnance examens EXPERTE g√©n√©r√©e avec succ√®s")

    return NextResponse.json({
      success: true,
      examens: examensData,
      metadata: {
        prescriptionType: "EXPERT_EXAMINATIONS_PRESCRIPTION",
        patientId: `${patientData.lastName}-${patientData.firstName}`,
        prescriptionDate: new Date().toISOString(),
        generatedAt: new Date().toISOString(),
        model: "gpt-4o-diagnostic-expert",
        safetyLevel: "MAXIMUM",
        validationStatus: "EXPERT_VALIDATED",
        examinationsCount: calculateTotalExaminations(examensData),
        complexityLevel: calculateExamensComplexity(examensData),
        riskLevel: assessExamensRisk(examensData, patientData),
        estimatedCost: calculateEstimatedCost(examensData)
      }
    })

  } catch (error) {
    console.error("‚ùå Erreur g√©n√©ration ordonnance examens experte:", error)

    // Fallback s√©curitaire
    const fallbackExamens = generateExpertExamensFallback(
      request.body?.patientData, 
      request.body?.diagnosisData, 
      request.body?.clinicalData
    )

    return NextResponse.json({
      success: true,
      examens: fallbackExamens,
      fallback: true,
      error: error instanceof Error ? error.message : "Erreur inconnue",
      metadata: {
        prescriptionType: "EXPERT_FALLBACK_EXAMINATIONS",
        generatedAt: new Date().toISOString(),
        fallbackUsed: true,
        safetyLevel: "HIGH",
        errorRecovery: "Prescription examens s√©curitaire de fallback utilis√©e"
      }
    }, { status: 200 })
  }
}

function generateExpertExamensFallback(patientData: any, diagnosisData: any, clinicalData: any): any {
  return {
    prescriptionHeader: {
      prescriptionId: `EXA-FB-${Date.now()}`,
      issueDate: new Date().toLocaleDateString("fr-FR"),
      issueTime: new Date().toLocaleTimeString("fr-FR"),
      prescriber: {
        name: "Dr. TIBOK IA DOCTOR",
        title: "Praticien Expert en M√©decine Interne",
        rppsNumber: "IA-RPPS-2024-EXPERT",
        establishment: "Centre M√©dical TIBOK - Consultation IA Expert"
      },
      patient: {
        lastName: patientData?.lastName || "N/A",
        firstName: patientData?.firstName || "N/A",
        age: `${patientData?.age || "N/A"} ans`,
        weight: `${patientData?.weight || "N/A"} kg`
      },
      clinicalContext: `Bilan diagnostique selon sympt√¥mes pr√©sent√©s : ${(clinicalData?.symptoms || []).join(", ") || "sympt√¥mes √† pr√©ciser"}`,
      urgencyLevel: "Programm√©e"
    },

    laboratoryTests: [
      {
        categoryId: "HEMATOLOGIE_BIOCHIMIE",
        categoryName: "Bilan Biologique Standard",
        tests: [
          {
            testId: "NFS_IONO_CRP",
            testName: "NFS + Ionogramme + CRP",
            nabmCode: "B0101 + B0102 + B0103",
            cost: "45.60‚Ç¨",
            reimbursement: "65%",
            
            indication: {
              primaryIndication: "Bilan biologique de premi√®re intention dans le cadre de l'√©valuation diagnostique. La NFS permet de d√©tecter une an√©mie, un syndrome infectieux ou inflammatoire. L'ionogramme √©value l'√©quilibre hydro√©lectrolytique et la fonction r√©nale. La CRP quantifie le syndrome inflammatoire.",
              clinicalObjective: "D√©pistage anomalies h√©matologiques, m√©taboliques et inflammatoires",
              evidenceLevel: "Grade A",
              guidelineReference: "Recommandations HAS - Bilan biologique de premi√®re intention"
            },

            technicalSpecs: {
              sampleType: "Sang veineux - 2 tubes (EDTA + sec)",
              sampleVolume: "6 mL total",
              fastingRequired: "Non n√©cessaire",
              processingTime: "2-4 heures",
              resultDelay: "M√™me jour si urgence"
            },

            contraindications: {
              absolute: ["Aucune contre-indication absolue"],
              relative: ["Troubles coagulation majeurs"],
              patientSpecific: patientData?.allergies?.includes("Latex") ? "Allergie latex - Pr√©cautions pr√©l√®vement" : "Pas de pr√©caution particuli√®re"
            },

            urgency: {
              level: "Semi-urgente",
              timing: "Dans les 24-48 heures",
              justification: "Bilan initial pour orientation diagnostique"
            }
          }
        ]
      }
    ],

    imagingStudies: [
      {
        categoryId: "RADIOLOGIE_STANDARD",
        categoryName: "Imagerie de Base",
        examinations: [
          {
            examId: "THORAX_FACE",
            examName: "Radiographie Thorax Face",
            ccamCode: "ZBQK002",
            cost: "25.12‚Ç¨",
            reimbursement: "70%",

            indication: {
              primaryIndication: "Imagerie thoracique de premi√®re intention selon sympt√¥mes respiratoires ou dans le cadre d'un bilan g√©n√©ral. Permet le d√©pistage de pathologies pulmonaires, cardiaques ou m√©diastinales.",
              clinicalQuestion: "√âlimination pathologie thoracique visible sur radiographie standard",
              diagnosticImpact: "Orientation diagnostique imm√©diate ou √©limination pathologie grave"
            },

            contraindications: {
              absolute: patientData?.gender === "Femme" && patientData?.age >= 15 && patientData?.age <= 50 ? ["Grossesse (premier trimestre) sans indication vitale"] : ["Aucune"],
              patientSpecific: "V√©rification absence grossesse si femme en √¢ge de procr√©er"
            },

            urgency: {
              level: "Programm√©e",
              timing: "Dans les 7-15 jours",
              justification: "Imagerie de d√©brouillage thoracique"
            }
          }
        ]
      }
    ],

    specializedTests: [
      {
        categoryId: "CARDIOLOGIE",
        categoryName: "Bilan Cardiaque de Base",
        examinations: [
          {
            examId: "ECG_REPOS",
            examName: "√âlectrocardiogramme de repos",
            nabmCode: "DEQP003",
            cost: "14.80‚Ç¨",
            reimbursement: "70%",

            indication: {
              primaryIndication: "ECG de d√©pistage selon sympt√¥mes cardiovasculaires ou dans le cadre d'un bilan syst√©matique. D√©tection troubles rythme, conduction, signes isch√©mie.",
              clinicalObjective: "√âlimination pathologie cardiaque √©lectrique",
              riskFactors: `Facteurs de risque cardiovasculaire : √¢ge ${patientData?.age || "N/A"} ans, ant√©c√©dents ${(patientData?.medicalHistory || []).join(", ") || "aucun"}`
            },

            contraindications: {
              absolute: ["Aucune contre-indication"],
              relative: ["L√©sions cutan√©es au niveau √©lectrodes"],
              patientSpecific: "Examen non invasif sans risque particulier"
            },

            urgency: {
              level: "Semi-urgente",
              timing: "Dans les 24-48 heures",
              justification: "√âlimination urgence cardiologique selon sympt√¥mes"
            }
          }
        ]
      }
    ],

    followUpPlan: {
      resultsTiming: {
        laboratoryResults: "24-48 heures",
        imagingResults: "24-72 heures",
        specializedTestResults: "Imm√©diat pour ECG"
      },
      interpretationPlan: {
        resultReview: "R√©vision syst√©matique tous r√©sultats dans les 72h",
        clinicalCorrelation: "Corr√©lation clinico-biologique obligatoire",
        nextSteps: "Adaptation prise en charge selon r√©sultats"
      },
      nextSteps: {
        followUpConsultation: "Consultation r√©sultats dans 7-10 jours",
        urgentCallback: "Contact imm√©diat si valeurs critiques",
        emergencyInstructions: "Consulter urgences si aggravation clinique"
      }
    },

    metadata: {
      prescriptionMetrics: {
        totalExaminations: 3,
        complexityScore: 3,
        costEstimate: "85.52‚Ç¨",
        timeToResults: "48-72 heures",
        diagnosticYield: "√âlev√©e pour bilan de premi√®re intention"
      },
      technicalData: {
        generationDate: new Date().toISOString(),
        aiModel: "Expert-Fallback-Examens",
        validationLevel: "Prescription examens s√©curitaire de base"
      }
    }
  }
}

async function validateExamensSafety(examensData: any, patientData: any): Promise<any> {
  // Validation s√©curitaire automatique examens
  
  // V√©rification grossesse pour examens irradiants
  if (patientData.gender === "Femme" && patientData.age >= 15 && patientData.age <= 50) {
    if (examensData.imagingStudies) {
      examensData.pregnancyWarning = {
        level: "IMPORTANT",
        message: "Femme en √¢ge de procr√©er - V√©rifier absence grossesse avant examens irradiants",
        action: "Test grossesse si doute avant radiologie"
      }
    }
  }

  // V√©rification fonction r√©nale pour produits de contraste
  if (patientData.age > 65 || patientData.medicalHistory?.includes("Insuffisance r√©nale")) {
    examensData.renalSafetyWarning = {
      level: "CRITIQUE",
      message: "Fonction r√©nale √† v√©rifier avant injection produits de contraste",
      action: "Cr√©atinin√©mie obligatoire avant injection"
    }
  }

  return examensData
}

function calculateTotalExaminations(examensData: any): number {
  let total = 0
  if (examensData.laboratoryTests) total += examensData.laboratoryTests.reduce((sum: number, cat: any) => sum + (cat.tests?.length || 0), 0)
  if (examensData.imagingStudies) total += examensData.imagingStudies.reduce((sum: number, cat: any) => sum + (cat.examinations?.length || 0), 0)
  if (examensData.specializedTests) total += examensData.specializedTests.reduce((sum: number, cat: any) => sum + (cat.examinations?.length || 0), 0)
  return total
}

function calculateEstimatedCost(examensData: any): string {
  // Calcul approximatif bas√© sur tarifs moyens
  const examCount = calculateTotalExaminations(examensData)
  const averageCost = 35 // Co√ªt moyen par examen
  return `${(examCount * averageCost).toFixed(2)}‚Ç¨`
}

function calculateRadiationDose(examensData: any): string {
  // Estimation dose radiation selon examens
  let dose = 0
  if (examensData.imagingStudies) {
    examensData.imagingStudies.forEach((category: any) => {
      category.examinations?.forEach((exam: any) => {
        if (exam.examId?.includes("THORAX")) dose += 0.1 // mSv
        if (exam.examId?.includes("CT")) dose += 5 // mSv
      })
    })
  }
  return dose > 0 ? `${dose.toFixed(1)} mSv` : "Aucune irradiation"
}

function countUrgentExams(examensData: any): number {
  let urgent = 0
  // Compter examens urgents dans toutes cat√©gories
  return urgent
}

function calculateAverageDelay(examensData: any): string {
  return "48-72 heures" // D√©lai moyen estim√©
}

function calculateExamensComplexity(examensData: any): string {
  const totalExams = calculateTotalExaminations(examensData)
  
  if (totalExams >= 8) return "√âLEV√âE"
  if (totalExams >= 5) return "MOD√âR√âE"
  return "STANDARD"
}

function assessExamensRisk(examensData: any, patientData: any): string {
  let risk = 0
  
  if (patientData.age >= 65) risk += 1
  if (patientData.allergies?.length > 0) risk += 1
  if (calculateTotalExaminations(examensData) > 5) risk += 1
  
  if (risk >= 2) return "MOD√âR√â"
  return "FAIBLE"
}
