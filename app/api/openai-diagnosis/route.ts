import { generateText } from "ai"
import { openai } from "@ai-sdk/openai"

// Types sp√©cifiques pour la t√©l√©m√©decine Maurice
interface MauritiusTeleMedRequest {
  patientData: MauritianPatientData
  clinicalData: TropicalClinicalData
  questionsData?: QuestionnaireData
  emergencyFlags?: EmergencyFlags
  teleMedContext: TeleMedContext
  locationData: MauritianLocationData
}

interface MauritianPatientData {
  firstName: string
  lastName: string
  age: number
  gender: 'M' | 'F' | 'X'
  weight?: number
  height?: number
  ethnicity: 'Indo-Mauritian' | 'Creole' | 'Sino-Mauritian' | 'Franco-Mauritian' | 'Mixed' | 'Other'
  languages: ('French' | 'English' | 'Creole' | 'Hindi' | 'Tamil' | 'Chinese' | 'Urdu')[]
  allergies: string[]
  medicalHistory: MedicalHistory[]
  medications: CurrentMedication[]
  familyHistory: FamilyHistory[]
  socialHistory: TropicalSocialHistory
  travelHistory: TravelHistory[]
  vaccinationStatus: VaccinationRecord[]
  insuranceType: 'Public' | 'Private' | 'Combined' | 'None'
}

interface TropicalSocialHistory {
  mosquitoExposure: 'High' | 'Medium' | 'Low'
  waterSources: ('Tap' | 'Well' | 'River' | 'Rainwater')[]
  housingType: 'Urban' | 'Rural' | 'Coastal'
  occupation: string
  recentTravel: boolean
  petOwnership: string[]
  seasonalFactors: string
}

interface TravelHistory {
  destination: string
  dates: { from: string; to: string }
  purpose: 'Tourism' | 'Business' | 'Family' | 'Medical'
  prophylaxis?: string[]
}

interface VaccinationRecord {
  vaccine: string
  date: string
  boosterDue?: string
}

interface TropicalClinicalData {
  chiefComplaint: string
  historyOfPresentIllness: string
  symptoms: TropicalSymptom[]
  vitalSigns: VitalSigns
  physicalExam: PhysicalExam
  reviewOfSystems: TropicalReviewOfSystems
  painScale?: number
  functionalStatus?: string
  mentalStatus?: string
  seasonalContext: 'Hot_Season' | 'Cool_Season' | 'Cyclone_Season' | 'Rainy_Season'
  vectorExposure: VectorExposure
}

interface TropicalSymptom {
  name: string
  onset: string
  duration: string
  severity: 1 | 2 | 3 | 4 | 5
  quality: string
  location?: string
  radiation?: string
  aggravatingFactors?: string[]
  alleviatingFactors?: string[]
  associatedSymptoms?: string[]
  tropicalContext?: string
  seasonalPattern?: boolean
}

interface VectorExposure {
  mosquitoBites: 'None' | 'Few' | 'Many' | 'Severe'
  tickExposure: boolean
  fleaExposure: boolean
  waterContact: boolean
  animalContact: string[]
}

interface TropicalReviewOfSystems {
  fever: boolean
  chills: boolean
  nightSweats: boolean
  headache: boolean
  rash: boolean
  jointPains: boolean
  musclePains: boolean
  nausea: boolean
  vomiting: boolean
  diarrhea: boolean
  abdominalPain: boolean
  cough: boolean
  breathlessness: boolean
  bleeding: boolean
  confusion: boolean
}

interface TeleMedContext {
  consultationType: 'First_Consultation' | 'Follow_Up' | 'Emergency' | 'Specialist_Opinion'
  connectionQuality: 'Excellent' | 'Good' | 'Fair' | 'Poor'
  availableDevices: ('Smartphone' | 'Tablet' | 'Computer' | 'Thermometer' | 'BP_Monitor' | 'Oximeter' | 'Glucometer')[]
  assistantPresent: boolean
  nearestHealthFacility: string
  distanceToHospital: number // en km
}

interface MauritianLocationData {
  region: 'Port_Louis' | 'Pamplemousses' | 'Riviere_du_Rempart' | 'Flacq' | 'Grand_Port' | 'Savanne' | 'Plaines_Wilhems' | 'Moka' | 'Black_River' | 'Rodrigues' | 'Agalega' | 'St_Brandon'
  nearestPublicHospital: string
  nearestPrivateClinic: string
  pharmacyAccess: 'Easy' | 'Moderate' | 'Difficult'
  specialistAccess: 'Available' | 'Limited' | 'Referral_Required'
}

// Formulaire national mauricien et ressources disponibles
const MAURITIAN_FORMULARY = {
  antibiotics: ['Amoxicillin', 'Doxycycline', 'Azithromycin', 'Ciprofloxacin', 'Metronidazole'],
  antimalarials: ['Artemether-Lumefantrine', 'Doxycycline', 'Mefloquine'],
  analgesics: ['Paracetamol', 'Ibuprofen', 'Diclofenac', 'Tramadol'],
  cardiovascular: ['Amlodipine', 'Enalapril', 'Atenolol', 'Simvastatin'],
  diabetes: ['Metformin', 'Glibenclamide', 'Insulin'],
  respiratory: ['Salbutamol', 'Prednisolone', 'Theophylline']
}

const MAURITIAN_HOSPITALS = {
  public: ['Sir Seewoosagur Ramgoolam National Hospital', 'Dr Jeetoo Hospital', 'Jawaharlal Nehru Hospital', 'Flacq Hospital', 'Souillac Hospital'],
  private: ['Wellkin Hospital', 'Apollo Bramwell', 'Clinique Darn√©', 'Clinique du Nord']
}

const TROPICAL_DISEASES_MAURITIUS = [
  'Dengue', 'Chikungunya', 'Zika', 'Malaria', 'Typhoid', 'Hepatitis A/B', 
  'Gastroenteritis', 'Skin infections', 'Respiratory infections', 'Cyclone injuries'
]

export async function POST(req: Request) {
  try {
    const requestData: MauritiusTeleMedRequest = await req.json()
    
    // Validation sp√©cifique Maurice
    const validationError = validateMauritianMedicalData(requestData)
    if (validationError) {
      return Response.json({ error: validationError }, { status: 400 })
    }

    console.log("üè• T√©l√©m√©decine CHU Maurice - Diagnostic expert pour:", requestData.patientData.firstName, requestData.patientData.lastName)
    console.log("üìç R√©gion:", requestData.locationData.region)
    console.log("üë®‚Äç‚öïÔ∏è Niveau expertise: CHU Professeur Chef de Service")

    // √âvaluation du risque tropical
    const tropicalRisk = assessTropicalDiseaseRisk(requestData)
    
    // Calcul de l'IMC et facteurs tropicaux
    const bmi = calculateBMI(requestData.patientData.weight, requestData.patientData.height)
    
    // Pr√©paration des donn√©es contextualis√©es pour Maurice
    const mauritianStructuredData = formatMauritianMedicalData(requestData, bmi, tropicalRisk)

    // Prompt sp√©cialis√© t√©l√©m√©decine tropicale Maurice
    const mauritianExpertPrompt = createMauritianTeleMedPrompt(mauritianStructuredData)

    const result = await generateText({
      model: openai("gpt-4"),
      prompt: mauritianExpertPrompt,
      temperature: 0.02, // Temp√©rature minimale pour expertise CHU maximale
      maxTokens: 6000,   // Augment√© pour diagnostic CHU complet d√©taill√©
    })

    console.log("‚úÖ Diagnostic t√©l√©m√©decine Maurice g√©n√©r√©")

    // Parsing et validation sp√©cifique Maurice niveau CHU
    const diagnosisData = parseAndValidateMauritianResponse(result.text)
    
    // Validation du niveau expertise CHU
    const chuExpertiseValidation = validateCHUExpertiseLevel(diagnosisData)
    
    // V√©rification urgences tropicales niveau CHU
    const tropicalEmergencyAssessment = assessTropicalEmergencyStatus(diagnosisData, requestData.emergencyFlags, tropicalRisk)
    
    // Validation des recommandations selon ressources mauriciennes
    const mauritianRecommendations = validateMauritianRecommendations(diagnosisData.recommendations, requestData)

    const response = {
      success: true,
      timestamp: new Date().toISOString(),
      patientId: `MU_${requestData.patientData.lastName}_${requestData.patientData.firstName}`,
      location: requestData.locationData.region,
      consultationType: requestData.teleMedContext.consultationType,
      data: {
        ...diagnosisData,
        tropicalContext: {
          riskAssessment: tropicalRisk,
          seasonalFactors: requestData.clinicalData.seasonalContext,
          vectorExposure: requestData.clinicalData.vectorExposure
        },
        emergencyAssessment: tropicalEmergencyAssessment,
        recommendations: mauritianRecommendations,
        teleMedGuidance: generateTeleMedGuidance(requestData.teleMedContext, diagnosisData),
        mauritianResources: {
          nearestFacilities: {
            publicHospital: requestData.locationData.nearestPublicHospital,
            privateClinic: requestData.locationData.nearestPrivateClinic
          },
          medicationAvailability: checkMedicationAvailability(diagnosisData.recommendations?.medications),
          referralOptions: generateReferralOptions(requestData.locationData, diagnosisData)
        },
        metadata: {
          bmi,
          tropicalRiskFactors: tropicalRisk.factors,
          culturalConsiderations: getCulturalConsiderations(requestData.patientData.ethnicity, requestData.patientData.languages),
          contraindications: checkContraindications(requestData.patientData),
        }
      }
    }

    return Response.json(response)

  } catch (error: any) {
    console.error("‚ùå Erreur t√©l√©m√©decine Maurice:", error)
    return Response.json({
      error: "Erreur syst√®me t√©l√©m√©decine Maurice",
      success: false,
      timestamp: new Date().toISOString(),
      emergency_contact: "SAMU 114 ou Police 999"
    }, { status: 500 })
  }
}

function createMauritianTeleMedPrompt(data: any): string {
  return `Tu es un PROFESSEUR DE M√âDECINE CHEF DE SERVICE en m√©decine interne/tropicale dans un CHU de r√©f√©rence, expert en t√©l√©m√©decine insulaire. Tu as 25 ans d'exp√©rience universitaire, diriges des internes/r√©sidents, publies dans des revues internationales et ma√Ætrises parfaitement l'√©pid√©miologie mauricienne et la m√©decine tropicale de haut niveau.

EXPERTISE ACAD√âMIQUE CHU:
- Professeur agr√©g√© de m√©decine interne et tropicale
- Chef de service polyvalent ma√Ætrisant TOUTES les sp√©cialit√©s m√©dicales
- Expert en diagnostic diff√©rentiel complexe (>10 hypoth√®ses syst√©matiques)
- Ma√Ætre de conf√©rences en s√©miologie m√©dicale avanc√©e
- Sp√©cialiste en evidence-based medicine et guidelines internationales
- Expert en pharmacologie clinique et interactions m√©dicamenteuses
- R√©f√©rent en urgences m√©dicales et soins critiques tropicaux

CONTEXTE √éLE MAURICE:
- Climat tropical: saisons chaude/fra√Æche, cyclones, forte humidit√©
- Maladies end√©miques: Dengue, Chikungunya, gastroent√©rites, infections cutan√©es
- Population multi-ethnique: Indo-mauriciens, Cr√©oles, Sino-mauriciens, Franco-mauriciens
- Syst√®me de sant√© mixte public/priv√© avec t√©l√©m√©decine √©mergente
- Ressources limit√©es: formulaire national, examens disponibles restreints
- G√©ographie insulaire: distances, acc√®s aux soins variables

=== DONN√âES PATIENT MAURICE ===
${data.patientSection}

=== CONTEXTE TROPICAL ===
${data.tropicalSection}

=== ANAMN√àSE T√âL√âM√âDECINE ===
${data.clinicalSection}

=== EXAMEN PHYSIQUE √Ä DISTANCE ===
${data.physicalExamSection}

=== CONTEXTE T√âL√âM√âDECINE ===
${data.teleMedSection}

=== MISSION DIAGNOSTIQUE CHU MAURICE ===

Effectue une analyse UNIVERSITAIRE EXPERTE de niveau professeur chef de service:

1. ANALYSE S√âMIOLOGIQUE EXHAUSTIVE: D√©cortique chaque signe selon la m√©thode universitaire classique
2. PHYSIOPATHOLOGIE INT√âGR√âE: Explique les m√©canismes sous-jacents de chaque sympt√¥me
3. DIAGNOSTIC DIFF√âRENTIEL SYST√âMATIQUE: Minimum 8-12 hypoth√®ses class√©es par probabilit√© bay√©sienne
4. STRAT√âGIE DIAGNOSTIQUE HI√âRARCHIS√âE: Examens par ordre de rentabilit√© diagnostique
5. TH√âRAPEUTIQUE EVIDENCE-BASED: Prescription selon recommandations HAS/OMS/Cochrane niveau A
6. MALADIES TROPICALES EXPERTES: Dengue/Chikungunya/Zika/Paludisme/Typhoid/M√©ningites/Sepsis tropicaux
7. URGENCES VITALES: Reconnaissance imm√©diate states critiques (choc, d√©tresse, coma)
8. M√âDECINE PERSONNALIS√âE: Adaptation √¢ge/ethnie/comorbidit√©s/g√©n√©tique populations mauriciennes
9. ENSEIGNEMENT M√âDICAL: Explications p√©dagogiques pour formation continue t√©l√©m√©decine
10. RECHERCHE CLINIQUE: Int√©gration derni√®res publications m√©decine tropicale 2024-2025

SP√âCIFICIT√âS MAURICIENNES:
- Saison des pluies ‚Üí pics de dengue/chikungunya
- Saison cyclonique ‚Üí traumatismes, stress, ruptures de soins
- Forte humidit√© ‚Üí infections cutan√©es/mycoses
- Population √† risque diab√®te/HTA (Indo-mauriciens)
- Acc√®s limit√© sp√©cialistes selon r√©gion
- Formulaire national: m√©dicaments disponibles restreints

CONTRAINTES T√âL√âM√âDECINE:
- Examen physique limit√© par cam√©ra/descriptions
- N√©cessit√© d'instructions claires pour patient/assistant
- Priorisation examens r√©alisables localement
- Orientation urgente si signes d'alarme

PROTOCOLES D'URGENCE MAURICE:
- SAMU: 114
- Police/Pompiers: 999
- Dengue h√©morragique ‚Üí hospitalisation imm√©diate
- Paludisme grave ‚Üí art√©sunate IV urgent
- Cyclone ‚Üí plan d'urgence sanitaire

R√âPONSE JSON EXPERT CHU MAURICE:
{
  "expertAnalysis": {
    "universitySemiology": {
      "primarySigns": "Analyse s√©miologique universitaire d√©taill√©e des signes cardinaux",
      "secondarySigns": "Signes d'accompagnement avec signification physiopathologique",
      "syndromicApproach": "Regroupement syndromique selon enseignement CHU classique",
      "pathophysiology": "M√©canismes physiopathologiques sous-jacents expliqu√©s niveau universitaire",
      "differentialMatrix": "Matrice diff√©rentielle syst√©matique >8 diagnostics avec probabilit√©s bay√©siennes"
    },
    "tropicalExpertise": {
      "vectorBorneDiseases": "Analyse experte maladies vectorielles (dengue/chikungunya/zika/paludisme)",
      "waterBorneDiseases": "Pathologies hydriques tropicales (typhoid/chol√©ra/h√©patites/gastroent√©rites)",
      "zoonoticRisks": "√âvaluation risques zoonotiques selon exposition Maurice",
      "seasonalEpidemiology": "√âpid√©miologie saisonni√®re Maurice avec cycles pr√©visionnels",
      "climateHealth": "Impact changement climatique sur pathologies √©mergentes Maurice"
    },
    "academicReasoning": "Raisonnement clinique structur√© niveau enseignement m√©dical universitaire",
    "evidenceLevel": "A|B|C avec citations guidelines internationales r√©centes",
    "teachingPoints": ["Points d'enseignement m√©dical pour formation continue"],
    "literatureReview": "Synth√®se litt√©rature r√©cente m√©decine tropicale appliqu√©e cas clinique"
  },
  "comprehensiveDiagnosis": {
    "primary": {
      "condition": "Diagnostic principal pr√©cis avec terminologie m√©dicale exacte",
      "icd11": "Code ICD-11 derni√®re version si disponible",
      "icd10": "Code ICD-10 de r√©f√©rence",
      "confidence": 85,
      "severity": "mild|moderate|severe|critical avec scoring si applicable",
      "rationale": "Justification experte d√©taill√©e niveau chef de service",
      "prognosis": "excellent|good|fair|poor|grave avec facteurs pronostiques",
      "complications": {
        "immediate": ["Complications imm√©diates possibles <24h"],
        "shortTerm": ["Complications court terme 1-7 jours"],
        "longTerm": ["Complications long terme >1 semaine"],
        "prevention": "Mesures pr√©ventives complications sp√©cifiques"
      },
      "physiopathology": "M√©canismes physiopathologiques d√©taill√©s",
      "epidemiology": "Donn√©es √©pid√©miologiques Maurice actualis√©es",
      "riskStratification": "Stratification du risque selon scores valid√©s"
    },
    "systematicDifferential": [
      {
        "rank": 1,
        "condition": "Diagnostic diff√©rentiel 1 (plus probable apr√®s principal)",
        "icd10": "Code ICD-10",
        "probability": 15,
        "rationale": "Arguments pour et contre d√©taill√©s",
        "excludingFactors": ["√âl√©ments permettant d'exclure ce diagnostic"],
        "confirmingTests": ["Tests diagnostiques confirmateurs sp√©cifiques"],
        "urgency": "critical|high|medium|low",
        "costEffectiveness": "Rapport co√ªt/efficacit√© diagnostique"
      },
      {
        "rank": 2,
        "condition": "Diagnostic diff√©rentiel 2",
        "icd10": "Code ICD-10",
        "probability": 12,
        "rationale": "Justification acad√©mique",
        "excludingFactors": ["Facteurs d'exclusion"],
        "confirmingTests": ["Tests confirmateurs"],
        "therapeuticImplications": "Implications th√©rapeutiques si confirm√©"
      }
      // Continuer pour 8-12 diagnostics diff√©rentiels minimum
    ],
    "redFlagAssessment": {
      "criticalSigns": ["Signes d'alarme vitale identifi√©s"],
      "timeToTreatment": "D√©lai critique maximal si pathologie temps-d√©pendante",
      "emergencyProtocol": "Protocole d'urgence activ√© si n√©cessaire",
      "triageLevel": "1-5 selon classification internationale"
    }
  },
  "expertInvestigations": {
    "diagnosticStrategy": {
      "firstLineRational": "Strat√©gie diagnostique de premi√®re ligne justifi√©e",
      "secondLineOptions": "Examens de seconde ligne selon r√©sultats premiers",
      "goldStandard": "Gold standard diagnostique si applicable",
      "costEffectiveness": "Analyse co√ªt-efficacit√© examens propos√©s"
    },
    "immediate_STAT": [
      {
        "name": "Examens urgents <2h",
        "category": "biology|imaging|cardiology|neurophysiology",
        "indication": "Indication m√©dicale pr√©cise niveau CHU",
        "expectedFindings": "R√©sultats attendus avec seuils pathologiques",
        "interpretation": "Interpr√©tation experte r√©sultats selon contexte",
        "sensitivity": "Sensibilit√©/sp√©cificit√© test",
        "timeFrame": "D√©lai d'obtention r√©sultats",
        "alternatives": "Alternatives si test non disponible Maurice"
      }
    ],
    "tropical_Specific": [
      {
        "name": "Tests sp√©cifiques maladies tropicales",
        "indications": "Selon √©pid√©miologie et pr√©sentation clinique",
        "availability_Maurice": "Disponibilit√© r√©elle laboratoires Maurice",
        "interpretation": "Interpr√©tation experte contexte tropical",
        "limitations": "Limites techniques et temporelles"
      }
    ],
    "advanced_CHU": [
      {
        "name": "Examens CHU sp√©cialis√©s",
        "indication": "Si diagnostic complexe non r√©solu",
        "referralRequired": "N√©cessit√© transfert CHU m√©tropole si indisponible",
        "expertConsultation": "Avis sp√©cialis√© requis"
      }
    ]
  },
  "expertTherapeutics": {
    "emergencyManagement": [
      {
        "intervention": "Mesures d'urgence vitale imm√©diate",
        "indication": "D√©tresse vitale identifi√©e",
        "protocol": "Protocole CHU standardis√©",
        "monitoring": "Surveillance continue param√®tres vitaux"
      }
    ],
    "evidenceBasedMedications": [
      {
        "name": "M√©dicament exact (DCI internationale)",
        "class": "Classe pharmacologique pr√©cise",
        "mechanism": "M√©canisme d'action d√©taill√©",
        "dosage": "Posologie exacte mg/kg si p√©diatrique, adulte standard",
        "route": "Voie d'administration optimale",
        "frequency": "Fr√©quence bas√©e pharmacocin√©tique",
        "duration": "Dur√©e traitement evidence-based",
        "indication": "Indication sp√©cifique niveau universitaire",
        "contraindications": {
          "absolute": ["Contre-indications absolues"],
          "relative": ["Contre-indications relatives avec adaptation possible"]
        },
        "interactions": ["Interactions m√©dicamenteuses majeures"],
        "sideEffects": {
          "common": ["Effets ind√©sirables fr√©quents >10%"],
          "serious": ["Effets ind√©sirables graves surveillance"],
          "monitoring": "Surveillance biologique/clinique requise"
        },
        "mauritianAvailability": "Public|Private|Import_required",
        "cost": "Estimation co√ªt Maurice avec alternatives",
        "evidenceLevel": "A|B|C avec r√©f√©rences guidelines",
        "pediatricDosing": "Adaptation p√©diatrique si applicable",
        "renalAdjustment": "Adaptation insuffisance r√©nale",
        "hepaticAdjustment": "Adaptation insuffisance h√©patique"
      }
    ],
    "adjuvantTherapy": [
      {
        "intervention": "Th√©rapeutiques compl√©mentaires evidence-based",
        "indication": "Justification m√©dicale pr√©cise",
        "evidenceLevel": "Niveau de preuve scientifique"
      }
    ]
  },
  "expertFollowUp": {
    "criticalTimePoints": {
      "immediate_2h": "Surveillance imm√©diate premiers signes am√©lioration/aggravation",
      "early_24h": "√âvaluation pr√©coce r√©ponse traitement",
      "shortTerm_72h": "Suivi court terme √©volution clinique",
      "weeklyFollow": "Surveillance hebdomadaire jusqu'am√©lioration compl√®te"
    },
    "specialistReferrals": [
      {
        "specialty": "Sp√©cialit√© m√©dicale pr√©cise",
        "indication": "Indication acad√©mique justifi√©e",
        "urgency": "critical|urgent|routine avec d√©lais",
        "mauritianAvailability": "Disponibilit√© sp√©cialiste Maurice",
        "telemedicineOption": "Possibilit√© t√©l√©consultation sp√©cialis√©e",
        "transferCriteria": "Crit√®res transfert CHU m√©tropole si n√©cessaire"
      }
    ],
    "patientEducation": {
      "diseaseUnderstanding": "√âducation maladie niveau universitaire adapt√© patient",
      "warningSignsEducation": "Signes d'alarme n√©cessitant reconsultation urgente",
      "culturalAdaptation": "Adaptation explications contexte culturel mauricien",
      "familyInvolvement": "Implication famille selon traditions mauriciennes"
    }
  },
  "qualityMetrics_CHU": {
    "evidenceLevel": "A|B|C|Expert_opinion avec d√©tail sources",
    "guidelinesUsed": [
      "Guidelines internationales utilis√©es avec versions",
      "Recommandations HAS/OMS/Cochrane applicables",
      "Consensus soci√©t√©s savantes m√©decine tropicale"
    ],
    "uncertaintyLevel": "low|medium|high avec justification",
    "peerReviewIndicated": "N√©cessit√© avis expert suppl√©mentaire",
    "academicTeaching": "Points d'enseignement pour formation m√©dicale continue",
    "researchOpportunities": "Opportunit√©s recherche clinique si cas complexe",
    "qualityIndicators": "Indicateurs qualit√© soins selon standards CHU"
  }
}`

  return mauritianExpertPrompt
}

function assessTropicalDiseaseRisk(data: MauritiusTeleMedRequest): any {
  const riskFactors: string[] = []
  let overallRisk = 'Low'

  // Facteurs saisonniers
  if (data.clinicalData.seasonalContext === 'Rainy_Season') {
    riskFactors.push('Saison des pluies - pic dengue/chikungunya')
    overallRisk = 'High'
  }

  // Exposition aux vecteurs
  if (data.clinicalData.vectorExposure.mosquitoBites === 'Many' || data.clinicalData.vectorExposure.mosquitoBites === 'Severe') {
    riskFactors.push('Forte exposition moustiques')
    overallRisk = 'High'
  }

  // Voyage r√©cent
  if (data.patientData.travelHistory?.some(t => 
    new Date(t.dates.to) > new Date(Date.now() - 21 * 24 * 60 * 60 * 1000)
  )) {
    riskFactors.push('Voyage r√©cent (<21 jours)')
    overallRisk = 'Medium'
  }

  // Sympt√¥mes compatibles maladies tropicales
  const tropicalSymptoms = ['fever', 'headache', 'myalgia', 'arthralgia', 'rash']
  const hasSymptoms = data.clinicalData.symptoms.some(s => 
    tropicalSymptoms.some(ts => s.name.toLowerCase().includes(ts))
  )
  
  if (hasSymptoms) {
    riskFactors.push('Sympt√¥mes compatibles maladies tropicales')
    if (overallRisk === 'Low') overallRisk = 'Medium'
  }

  return {
    level: overallRisk,
    factors: riskFactors,
    recommendedTests: overallRisk === 'High' ? ['Dengue NS1', 'Chikungunya IgM', 'Malaria RDT'] : []
  }
}

function formatMauritianMedicalData(data: MauritiusTeleMedRequest, bmi: number | null, tropicalRisk: any): any {
  const { patientData, clinicalData, teleMedContext, locationData } = data
  
  const patientSection = `
IDENTIT√â MAURICE: ${patientData.firstName} ${patientData.lastName}
√ÇGE: ${patientData.age} ans | SEXE: ${patientData.gender} | IMC: ${bmi || 'Non calcul√©'}
ORIGINE ETHNIQUE: ${patientData.ethnicity}
LANGUES: ${patientData.languages.join(', ')}
R√âGION: ${locationData.region}
ASSURANCE: ${patientData.insuranceType}
ALLERGIES: ${patientData.allergies?.join(', ') || 'Aucune connue'}
ANT√âC√âDENTS: ${patientData.medicalHistory?.map(h => `${h.condition} (${h.year})`).join(', ') || 'Aucun'}
VACCINATIONS: ${patientData.vaccinationStatus?.map(v => `${v.vaccine} (${v.date})`).join(', ') || 'Non renseign√©es'}
VOYAGES R√âCENTS: ${patientData.travelHistory?.map(t => `${t.destination} (${t.dates.from}-${t.dates.to})`).join(', ') || 'Aucun'}
`

  const tropicalSection = `
RISQUE TROPICAL: ${tropicalRisk.level}
FACTEURS DE RISQUE: ${tropicalRisk.factors.join(', ')}
SAISON: ${clinicalData.seasonalContext}
EXPOSITION MOUSTIQUES: ${clinicalData.vectorExposure.mosquitoBites}
CONTACT EAU: ${clinicalData.vectorExposure.waterContact ? 'Oui' : 'Non'}
CONTACT ANIMAUX: ${clinicalData.vectorExposure.animalContact.join(', ') || 'Aucun'}
LOGEMENT: ${patientData.socialHistory.housingType}
SOURCES D'EAU: ${patientData.socialHistory.waterSources.join(', ')}
`

  const teleMedSection = `
TYPE CONSULTATION: ${teleMedContext.consultationType}
QUALIT√â CONNEXION: ${teleMedContext.connectionQuality}
APPAREILS DISPONIBLES: ${teleMedContext.availableDevices.join(', ')}
ASSISTANT PR√âSENT: ${teleMedContext.assistantPresent ? 'Oui' : 'Non'}
DISTANCE H√îPITAL: ${teleMedContext.distanceToHospital} km
H√îPITAL LE PLUS PROCHE: ${locationData.nearestPublicHospital}
CLINIQUE PRIV√âE: ${locationData.nearestPrivateClinic}
ACC√àS PHARMACIE: ${locationData.pharmacyAccess}
`

  const clinicalSection = `
MOTIF: ${clinicalData.chiefComplaint}
HISTOIRE: ${clinicalData.historyOfPresentIllness}
SYMPT√îMES: ${clinicalData.symptoms?.map(s => 
  `${s.name} (${s.severity}/5, ${s.duration}, ${s.onset})`
).join('; ') || 'Non d√©taill√©s'}
SIGNES VITAUX: 
- T¬∞: ${clinicalData.vitalSigns?.temperature}¬∞C
- TA: ${clinicalData.vitalSigns?.bloodPressure?.systolic}/${clinicalData.vitalSigns?.bloodPressure?.diastolic} mmHg
- FC: ${clinicalData.vitalSigns?.heartRate} bpm
- SpO2: ${clinicalData.vitalSigns?.oxygenSaturation}%
REVUE DES SYST√àMES:
- Fi√®vre: ${clinicalData.reviewOfSystems?.fever ? 'Oui' : 'Non'}
- C√©phal√©es: ${clinicalData.reviewOfSystems?.headache ? 'Oui' : 'Non'}
- √âruption: ${clinicalData.reviewOfSystems?.rash ? 'Oui' : 'Non'}
- Arthralgies: ${clinicalData.reviewOfSystems?.jointPains ? 'Oui' : 'Non'}
- Troubles digestifs: ${clinicalData.reviewOfSystems?.nausea || clinicalData.reviewOfSystems?.vomiting ? 'Oui' : 'Non'}
`

  const physicalExamSection = `
EXAMEN √Ä DISTANCE (Limitations t√©l√©m√©decine):
ASPECT G√âN√âRAL: ${clinicalData.physicalExam?.general}
PEAU VISIBLE: ${clinicalData.physicalExam?.dermatological || '√âvaluation limit√©e par cam√©ra'}
OROPHARYNX: ${clinicalData.physicalExam?.heent || 'Si visible par cam√©ra'}
RESPIRATION: ${clinicalData.physicalExam?.respiratory || 'Observation fr√©quence respiratoire'}
INSTRUCTIONS PATIENT: Auto-palpation abdomen, mesure pouls si possible
`

  return { patientSection, tropicalSection, teleMedSection, clinicalSection, physicalExamSection }
}

function validateMauritianMedicalData(data: MauritiusTeleMedRequest): string | null {
  if (!data.patientData?.firstName || !data.patientData?.age) {
    return "Donn√©es patient incompl√®tes"
  }
  
  if (!data.clinicalData?.chiefComplaint) {
    return "Motif de consultation manquant"
  }
  
  if (!data.locationData?.region) {
    return "Localisation Maurice requise"
  }
  
  if (!data.teleMedContext?.consultationType) {
    return "Type de consultation t√©l√©m√©decine requis"
  }
  
  return null
}

function validateCHUExpertiseLevel(diagnosis: any): any {
  const expertiseMetrics = {
    differentialCount: 0,
    evidenceLevel: 'C',
    complexityScore: 0,
    academicRigor: false,
    chuStandards: false
  }

  // V√©rifier nombre de diagnostics diff√©rentiels (CHU = minimum 8)
  if (diagnosis.comprehensiveDiagnosis?.systematicDifferential) {
    expertiseMetrics.differentialCount = diagnosis.comprehensiveDiagnosis.systematicDifferential.length
  }

  // V√©rifier niveau de preuve
  if (diagnosis.qualityMetrics_CHU?.evidenceLevel) {
    expertiseMetrics.evidenceLevel = diagnosis.qualityMetrics_CHU.evidenceLevel
  }

  // V√©rifier pr√©sence d'analyse physiopathologique
  if (diagnosis.expertAnalysis?.universitySemiology?.pathophysiology) {
    expertiseMetrics.complexityScore += 1
  }

  // V√©rifier enseignement m√©dical int√©gr√©
  if (diagnosis.qualityMetrics_CHU?.academicTeaching) {
    expertiseMetrics.academicRigor = true
    expertiseMetrics.complexityScore += 1
  }

  // Standards CHU respect√©s
  expertiseMetrics.chuStandards = 
    expertiseMetrics.differentialCount >= 6 &&
    expertiseMetrics.complexityScore >= 2 &&
    expertiseMetrics.academicRigor

  return {
    level: expertiseMetrics.chuStandards ? 'CHU_Expert' : 'Standard_Medical',
    metrics: expertiseMetrics,
    recommendations: expertiseMetrics.chuStandards ? 
      'Niveau expertise CHU maintenu' : 
      'R√©vision niveau expertise recommand√©e'
  }
}

function parseAndValidateMauritianResponse(response: string): any {
  try {
    let cleanedResponse = response.trim()
    cleanedResponse = cleanedResponse.replace(/```json\n?|\n?```/g, "")
    
    const firstBrace = cleanedResponse.indexOf("{")
    const lastBrace = cleanedResponse.lastIndexOf("}")
    
    if (firstBrace >= 0 && lastBrace > firstBrace) {
      cleanedResponse = cleanedResponse.substring(firstBrace, lastBrace + 1)
    }
    
    return JSON.parse(cleanedResponse)
  } catch (error) {
    console.error("Erreur parsing r√©ponse Maurice:", error)
    return createMauritianFallbackDiagnosis()
  }
}

function createMauritianFallbackDiagnosis(): any {
  return {
    expertAnalysis: {
      universitySemiology: {
        primarySigns: "Analyse s√©miologique en cours - expertise CHU requise",
        pathophysiology: "M√©canismes physiopathologiques √† pr√©ciser par examen expert",
        differentialMatrix: "Diagnostic diff√©rentiel √©largi n√©cessaire - consultation CHU"
      },
      academicReasoning: "Raisonnement clinique complexe n√©cessitant expertise universitaire",
      evidenceLevel: "Expert opinion - donn√©es insuffisantes pour niveau A/B",
      teachingPoints: ["Cas clinique complexe pour enseignement m√©dical"],
      literatureReview: "Recherche bibliographique approfondie recommand√©e"
    },
    comprehensiveDiagnosis: {
      primary: {
        condition: "Syndrome clinique complexe non sp√©cifique",
        icd11: "MG30.Z",
        icd10: "R68.89",
        confidence: 50,
        severity: "moderate",
        rationale: "Pr√©sentation atypique n√©cessitant expertise CHU multidisciplinaire",
        prognosis: "good",
        complications: {
          immediate: ["Surveillance complications imm√©diates"],
          shortTerm: ["√âvolution √† surveiller 24-48h"],
          prevention: "Mesures pr√©ventives g√©n√©rales en attente diagnostic pr√©cis"
        },
        physiopathology: "M√©canismes sous-jacents √† √©lucider",
        riskStratification: "Stratification du risque en cours d'√©valuation"
      },
      systematicDifferential: [
        {
          rank: 1,
          condition: "Syndrome viral tropical non sp√©cifique",
          probability: 30,
          rationale: "Contexte √©pid√©miologique mauricien favorable",
          confirmingTests: ["PCR virales tropicales", "S√©rologies sp√©cifiques"],
          urgency: "medium"
        },
        {
          rank: 2,
          condition: "Infection bact√©rienne syst√©mique",
          probability: 25,
          rationale: "Signes inflammatoires compatibles",
          confirmingTests: ["H√©mocultures", "PCT", "CRP"],
          urgency: "high"
        },
        {
          rank: 3,
          condition: "Pathologie auto-immune √©mergente",
          probability: 15,
          rationale: "Pr√©sentation syst√©mique atypique",
          confirmingTests: ["AAN", "Compl√©ment", "Immunoglobulines"],
          urgency: "medium"
        }
      ],
      redFlagAssessment: {
        criticalSigns: ["√âvaluation signes d'alarme en cours"],
        emergencyProtocol: "Surveillance rapproch√©e protocole CHU"
      }
    },
    expertInvestigations: {
      diagnosticStrategy: {
        firstLineRational: "Bilan √©tiologique large premi√®re intention",
        costEffectiveness: "Optimisation rapport co√ªt-efficacit√© diagnostique"
      },
      immediate_STAT: [
        {
          name: "Bilan inflammatoire et infectieux urgent",
          category: "biology",
          indication: "Syndrome inflammatoire syst√©mique",
          expectedFindings: "Orientation √©tiologique selon r√©sultats",
          sensitivity: "Screening large pathologies",
          alternatives: "Examens adapt√©s ressources Maurice"
        }
      ],
      tropical_Specific: [
        {
          name: "Panel tropical mauricien",
          indications: "Exclusion pathologies end√©miques prioritaires",
          availability_Maurice: "Tests rapides disponibles localement"
        }
      ]
    },
    expertTherapeutics: {
      emergencyManagement: [
        {
          intervention: "Surveillance clinique rapproch√©e",
          protocol: "Protocole CHU d'observation active",
          monitoring: "Param√®tres vitaux toutes les 4h"
        }
      ],
      evidenceBasedMedications: [
        {
          name: "Traitement symptomatique adapt√©",
          indication: "En attente diagnostic √©tiologique pr√©cis",
          mauritianAvailability: "M√©dicaments formulaire disponibles",
          evidenceLevel: "Expert consensus",
          monitoring: "Surveillance tol√©rance et efficacit√©"
        }
      ]
    },
    expertFollowUp: {
      criticalTimePoints: {
        immediate_2h: "R√©√©valuation clinique dans 2h",
        early_24h: "Consultation CHU dans 24h si pas d'am√©lioration"
      },
      specialistReferrals: [
        {
          specialty: "M√©decine interne CHU",
          indication: "Syndrome complexe multisyst√©mique",
          urgency: "urgent",
          mauritianAvailability: "T√©l√©consultation CHU m√©tropole possible"
        }
      ]
    },
    qualityMetrics_CHU: {
      evidenceLevel: "Expert opinion",
      uncertaintyLevel: "high",
      peerReviewIndicated: true,
      academicTeaching: "Cas d'√©cole pour diagnostic diff√©rentiel complexe"
    }
  }
}

function assessTropicalEmergencyStatus(diagnosis: any, flags?: EmergencyFlags, tropicalRisk?: any): any {
  const redFlags = flags?.redFlags || []
  
  // Red flags sp√©cifiques tropicaux
  const tropicalRedFlags = []
  if (tropicalRisk?.level === 'High') {
    tropicalRedFlags.push('Risque √©lev√© maladie tropicale')
  }
  
  return {
    triageLevel: flags?.triageLevel || 3,
    tropicalEmergencyLevel: tropicalRisk?.level || 'Low',
    criticalFindings: [...redFlags, ...tropicalRedFlags],
    emergencyContacts: {
      samu: "114",
      police: "999",
      nearestHospital: "Selon r√©gion"
    }
  }
}

function validateMauritianRecommendations(recommendations: any, requestData: MauritiusTeleMedRequest): any {
  // V√©rifier disponibilit√© m√©dicaments selon formulaire mauricien
  if (recommendations?.medications) {
    recommendations.medications = recommendations.medications.map((med: any) => {
      const availability = checkMedicationAvailability([med])
      return {
        ...med,
        mauritianAvailability: availability[med.name] || 'Non disponible formulaire',
        alternativeIfUnavailable: findMauritianAlternative(med.name)
      }
    })
  }
  
  return recommendations
}

function checkMedicationAvailability(medications: any[]): Record<string, string> {
  const availability: Record<string, string> = {}
  
  medications?.forEach(med => {
    const medName = med.name.toLowerCase()
    let found = false
    
    Object.values(MAURITIAN_FORMULARY).forEach(category => {
      if (category.some(m => m.toLowerCase().includes(medName) || medName.includes(m.toLowerCase()))) {
        availability[med.name] = 'Disponible formulaire Maurice'
        found = true
      }
    })
    
    if (!found) {
      availability[med.name] = 'Non disponible - alternative requise'
    }
  })
  
  return availability
}

function findMauritianAlternative(medication: string): string {
  const alternatives: Record<string, string> = {
    'oseltamivir': 'Traitement symptomatique',
    'azithromycin': 'Disponible formulaire',
    'doxycycline': 'Disponible formulaire',
    'paracetamol': 'Disponible formulaire'
  }
  
  return alternatives[medication.toLowerCase()] || 'Consulter pharmacien Maurice'
}

function generateTeleMedGuidance(context: TeleMedContext, diagnosis: any): any {
  return {
    nextConsultation: context.consultationType === 'Emergency' ? '2-4 heures' : '24-48 heures',
    monitoringInstructions: [
      'Mesurer temp√©rature 3x/jour',
      'Surveiller hydratation',
      'Noter √©volution sympt√¥mes'
    ],
    familyEducation: 'Instructions en fran√ßais/cr√©ole selon pr√©f√©rence',
    technologyNeeds: context.connectionQuality === 'Poor' ? 'Am√©liorer connexion pour suivi' : 'Connexion adapt√©e'
  }
}

function generateReferralOptions(location: MauritianLocationData, diagnosis: any): any[] {
  const referrals = []
  
  if (diagnosis.emergencyFlags?.emergencyLevel === 'high') {
    referrals.push({
      facility: location.nearestPublicHospital,
      urgency: 'Immediate',
      transport: 'Ambulance SAMU 114'
    })
  }
  
  referrals.push({
    facility: location.nearestPrivateClinic,
    urgency: 'Routine',
    transport: 'Transport personnel'
  })
  
  return referrals
}

function getCulturalConsiderations(ethnicity: string, languages: string[]): string[] {
  const considerations = []
  
  if (ethnicity.includes('Indo')) {
    considerations.push('Consid√©rer habitudes alimentaires v√©g√©tariennes')
    considerations.push('M√©decine ayurv√©dique compl√©mentaire possible')
  }
  
  if (languages.includes('Creole')) {
    considerations.push('Instructions en cr√©ole mauricien si n√©cessaire')
  }
  
  considerations.push('Respect traditions familiales dans soins')
  
  return considerations
}

function calculateBMI(weight?: number, height?: number): number | null {
  if (!weight || !height) return null
  const heightM = height / 100
  return Math.round((weight / (heightM * heightM)) * 10) / 10
}

function checkContraindications(patientData: MauritianPatientData): Record<string, string[]> {
  const contraindications: Record<string, string[]> = {}
  
  patientData.allergies?.forEach(allergy => {
    if (allergy.toLowerCase().includes('p√©nicilline')) {
      contraindications["amoxicilline"] = ["Allergie p√©nicilline"]
    }
    if (allergy.toLowerCase().includes('aspirin')) {
      contraindications["aspirine"] = ["Allergie aspirine"]
    }
  })
  
  return contraindications
}
